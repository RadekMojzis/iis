DROP TABLE MANGA CASCADE CONSTRAINTS;

DROP TABLE AUTHOR CASCADE CONSTRAINTS;

DROP TABLE AUTHOR_MANGA CASCADE CONSTRAINTS;

DROP TABLE DRAFTSMAN_MANGA CASCADE CONSTRAINTS;
DROP TABLE GENRE CASCADE CONSTRAINTS;

DROP TABLE AUTHOR_GENRE CASCADE CONSTRAINTS;

DROP TABLE USER_GENRE CASCADE CONSTRAINTS;
DROP TABLE MANGA_GENRE CASCADE CONSTRAINTS;
DROP TABLE T_USER CASCADE CONSTRAINTS;

DROP TABLE USER_MANGA CASCADE CONSTRAINTS;
DROP TABLE CHARACTER CASCADE CONSTRAINTS;
DROP TABLE USER_CHARACTER CASCADE CONSTRAINTS;

DROP TABLE PAGE_CHARACTER CASCADE CONSTRAINTS;

DROP TABLE MANGA_CHARACTER CASCADE CONSTRAINTS;
DROP TABLE PAGE CASCADE CONSTRAINTS;

DROP TABLE CHAPTER CASCADE CONSTRAINTS;

DROP TABLE MAGAZINE CASCADE CONSTRAINTS;
DROP TABLE VOLUME CASCADE CONSTRAINTS;

DROP TABLE ADDITIONAL_DATA CASCADE CONSTRAINTS;

DROP TABLE MAGAZINE_CHAPTER CASCADE CONSTRAINTS;

DROP TABLE VOLUME_CHAPTER CASCADE CONSTRAINTS;
DROP TABLE USER_VOLUME CASCADE CONSTRAINTS;

DROP TABLE USER_MAGAZINE CASCADE CONSTRAINTS;


CREATE TABLE MANGA
(
  ID_MANGA        NUMBER       NOT NULL,
  TITLE           VARCHAR2(20) NOT NULL,
  DATE_OF_RELEASE DATE,
  STATUS          VARCHAR2(10) CHECK (STATUS IN ('open', 'close')),
  FREQUENCY       VARCHAR2(10) CHECK (FREQUENCY IN ('day', 'week', 'month', 'year')),
  CONSTRAINT MANGA_PK PRIMARY KEY (ID_MANGA) ENABLE
);

CREATE TABLE AUTHOR
(
  ID_AUTHOR             NUMBER NOT NULL,
  NAME                  VARCHAR2(20),
  SURNAME               VARCHAR2(20),
  DATE_OF_BIRTH         DATE,
  DATE_OF_FIRSTP_UBLISH DATE,
  ALIAS                 VARCHAR2(20),
  CONSTRAINT AUTHOR_PK PRIMARY KEY (ID_AUTHOR) ENABLE
);

CREATE TABLE AUTHOR_MANGA
(
  AUTHOR_ID NUMBER NOT NULL,
  MANGA_ID  NUMBER NOT NULL,
  CONSTRAINT AUTHOR_MANGA_PK PRIMARY KEY (AUTHOR_ID, MANGA_ID) ENABLE,
  CONSTRAINT AM_AUTHOR_FK FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR (ID_AUTHOR) ON DELETE CASCADE ENABLE,
  CONSTRAINT AM_MANGA_FK FOREIGN KEY (MANGA_ID) REFERENCES MANGA (ID_MANGA) ON DELETE CASCADE ENABLE
);

CREATE TABLE DRAFTSMAN_MANGA
(
  DRAFTSMAN_ID NUMBER NOT NULL,
  MANGA_ID     NUMBER NOT NULL,
  CONSTRAINT DRAFTSMAN_MANGA_PK PRIMARY KEY (DRAFTSMAN_ID, MANGA_ID) ENABLE,
  CONSTRAINT DM_DRAFTSMAN_FK FOREIGN KEY (DRAFTSMAN_ID) REFERENCES AUTHOR (ID_AUTHOR) ON DELETE CASCADE ENABLE,
  CONSTRAINT DM_MANGA_FK FOREIGN KEY (MANGA_ID) REFERENCES MANGA (ID_MANGA) ON DELETE CASCADE ENABLE
);

CREATE TABLE GENRE
(
  ID_GENRE NUMBER       NOT NULL,
  NAME     VARCHAR2(20) NOT NULL,
  CONSTRAINT GENRE_PK PRIMARY KEY (ID_GENRE) ENABLE
);

CREATE TABLE T_USER
(
  ID_USER              NUMBER NOT NULL,
  NAME                 VARCHAR2(25),
  SURNAME              VARCHAR2(25),
  DATE_OF_BIRTH        DATE,
  NICKNAME             VARCHAR2(54) UNIQUE, --jmeno_prijmeni_NN
  NOTIFICATION_ENABLED CHAR(1) DEFAULT 'Y' CHECK (NOTIFICATION_ENABLED IN ('Y', 'N')),
  SHIPPING_ENABED      CHAR(1) DEFAULT 'N' CHECK (SHIPPING_ENABED IN ('Y', 'N')),
  CONSTRAINT T_USER_PK PRIMARY KEY (ID_USER) ENABLE
);

CREATE TABLE AUTHOR_GENRE
(
  AUTHOR_ID NUMBER NOT NULL,
  GENRE_ID  NUMBER NOT NULL,
  CONSTRAINT AUTHOR_GENRE_PK PRIMARY KEY (AUTHOR_ID, GENRE_ID) ENABLE,
  CONSTRAINT AG_AUTHOR_FK FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR (ID_AUTHOR) ON DELETE CASCADE ENABLE,
  CONSTRAINT AG_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRE (ID_GENRE) ON DELETE CASCADE ENABLE
);

CREATE TABLE USER_GENRE
(
  USER_ID  NUMBER NOT NULL,
  GENRE_ID NUMBER NOT NULL,
  CONSTRAINT USER_GENRE_PK PRIMARY KEY (USER_ID, GENRE_ID) ENABLE,
  CONSTRAINT UG_USER_FK FOREIGN KEY (USER_ID) REFERENCES T_USER (ID_USER) ON DELETE CASCADE ENABLE,
  CONSTRAINT UG_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRE (ID_GENRE) ON DELETE CASCADE ENABLE
);

CREATE TABLE MANGA_GENRE
(
  MANGA_ID NUMBER NOT NULL,
  GENRE_ID NUMBER NOT NULL,
  CONSTRAINT MANGA_GENRE_PK PRIMARY KEY (MANGA_ID, GENRE_ID) ENABLE,
  CONSTRAINT MG_MANGA_FK FOREIGN KEY (MANGA_ID) REFERENCES MANGA (ID_MANGA) ON DELETE CASCADE ENABLE,
  CONSTRAINT MG_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRE (ID_GENRE) ON DELETE CASCADE ENABLE
);


CREATE TABLE USER_MANGA
(
  USER_ID  NUMBER NOT NULL,
  MANGA_ID NUMBER NOT NULL,
  CONSTRAINT USER_MANGA_PK PRIMARY KEY (USER_ID, MANGA_ID) ENABLE,
  CONSTRAINT UM_USER_FK FOREIGN KEY (USER_ID) REFERENCES T_USER (ID_USER) ON DELETE CASCADE ENABLE,
  CONSTRAINT UM_MANGA_FK FOREIGN KEY (MANGA_ID) REFERENCES MANGA (ID_MANGA) ON DELETE CASCADE ENABLE
);

CREATE TABLE CHARACTER
(
  ID_CHARACTER     NUMBER NOT NULL,
  NAME             VARCHAR2(25),
  LOOK             VARCHAR2(20),
  AGE              NUMBER,
  FIRST_APPEARANCE NUMBER NOT NULL,
  LAST_APPEARANCE  NUMBER NOT NULL,
  CONSTRAINT TABLE1_PK PRIMARY KEY (ID_CHARACTER) ENABLE
);

CREATE TABLE USER_CHARACTER
(
  USER_ID      NUMBER NOT NULL,
  CHARACTER_ID NUMBER NOT NULL,
  CONSTRAINT USER_CHARACTER_PK PRIMARY KEY (USER_ID, CHARACTER_ID) ENABLE,
  CONSTRAINT UC_USER_FK FOREIGN KEY (USER_ID) REFERENCES T_USER (ID_USER) ON DELETE CASCADE ENABLE,
  CONSTRAINT UC_CHARACTER_FK FOREIGN KEY (CHARACTER_ID) REFERENCES CHARACTER (ID_CHARACTER) ON DELETE CASCADE ENABLE
);


CREATE TABLE PAGE
(
  ID_PAGE     NUMBER NOT NULL,
  PAGE_NUMBER NUMBER NOT NULL,
  CHAPTER_ID  NUMBER NOT NULL,
  CONSTRAINT PAGE_PK PRIMARY KEY (ID_PAGE) ENABLE,
  CONSTRAINT P_CHARACTER_FK FOREIGN KEY (CHAPTER_ID) REFERENCES CHARACTER (ID_CHARACTER) ON DELETE CASCADE ENABLE
);

CREATE TABLE PAGE_CHARACTER
(
  PAGE_ID      NUMBER NOT NULL,
  CHARACTER_ID NUMBER NOT NULL,
  CONSTRAINT PAGE_CHARACTER_PK PRIMARY KEY (PAGE_ID, CHARACTER_ID) ENABLE,
  CONSTRAINT PC_PAGE_FK FOREIGN KEY (PAGE_ID) REFERENCES PAGE (ID_PAGE) ON DELETE CASCADE ENABLE,
  CONSTRAINT PC_CHARACTER_FK FOREIGN KEY (CHARACTER_ID) REFERENCES CHARACTER (ID_CHARACTER) ON DELETE CASCADE ENABLE
);

CREATE TABLE MANGA_CHARACTER
(
  MANGA_ID     NUMBER NOT NULL,
  CHARACTER_ID NUMBER NOT NULL,
  CONSTRAINT MANGA_CHARACTER_PK PRIMARY KEY (MANGA_ID, CHARACTER_ID) ENABLE,
  CONSTRAINT MANGA_FK FOREIGN KEY (MANGA_ID) REFERENCES MANGA (ID_MANGA) ON DELETE CASCADE ENABLE,
  CONSTRAINT CHARACTER_FK FOREIGN KEY (CHARACTER_ID) REFERENCES CHARACTER (ID_CHARACTER) ON DELETE CASCADE ENABLE
);


CREATE TABLE CHAPTER
(
  ID_CHAPTER    NUMBER       NOT NULL,
  TITLE         VARCHAR2(25) NOT NULL,
  SERIAL_NUMBER VARCHAR2(12) NOT NULL,
  COVER         VARCHAR2(50),
  MANGA_ID      NUMBER       NOT NULL,
  CONSTRAINT CHAPTER_PK PRIMARY KEY (ID_CHAPTER) ENABLE,
  CONSTRAINT C_MANGA_FK FOREIGN KEY (MANGA_ID) REFERENCES MANGA (ID_MANGA) ON DELETE CASCADE ENABLE
);

CREATE TABLE MAGAZINE
(
  ID_MAGAZINE NUMBER       NOT NULL,
  TITLE       VARCHAR2(25) NOT NULL,
  CONSTRAINT MAGAZINE_PK PRIMARY KEY (ID_MAGAZINE) ENABLE
);

CREATE TABLE VOLUME
(
  ID_VOLUME NUMBER       NOT NULL,
  NAME      VARCHAR2(25) NOT NULL,
  CONSTRAINT VOLUME_PK PRIMARY KEY (ID_VOLUME) ENABLE
);

CREATE TABLE ADDITIONAL_DATA
(
  ID_ADDITIONAL NUMBER NOT NULL,
  TEXT          VARCHAR2(1500),
  VOLUME_ID     NUMBER NOT NULL,
  CONSTRAINT ADDITIONAL_DATA_PK PRIMARY KEY (ID_ADDITIONAL) ENABLE,
  CONSTRAINT A_VOLUME_FK FOREIGN KEY (VOLUME_ID) REFERENCES VOLUME (ID_VOLUME) ON DELETE CASCADE ENABLE
);

CREATE TABLE MAGAZINE_CHAPTER
(
  MAGAZINE_ID NUMBER NOT NULL,
  CHAPTER_ID  NUMBER NOT NULL,
  CONSTRAINT MAGAZINE_CHAPTER_PK PRIMARY KEY (MAGAZINE_ID, CHAPTER_ID) ENABLE,
  CONSTRAINT MC_MAGAZINE_FK FOREIGN KEY (MAGAZINE_ID) REFERENCES MAGAZINE (ID_MAGAZINE) ON DELETE CASCADE ENABLE,
  CONSTRAINT MC_CHAPTER_FK FOREIGN KEY (CHAPTER_ID) REFERENCES CHAPTER (ID_CHAPTER) ON DELETE CASCADE ENABLE
);

CREATE TABLE VOLUME_CHAPTER
(
  VOLUME_ID  NUMBER NOT NULL,
  CHAPTER_ID NUMBER NOT NULL,
  CONSTRAINT VOLUME_CHAPTER_PK PRIMARY KEY (VOLUME_ID, CHAPTER_ID) ENABLE,
  CONSTRAINT VC_VOLUME_FK FOREIGN KEY (VOLUME_ID) REFERENCES VOLUME (ID_VOLUME) ON DELETE CASCADE ENABLE,
  CONSTRAINT VC_CHAPTER_FK FOREIGN KEY (CHAPTER_ID) REFERENCES CHAPTER (ID_CHAPTER) ON DELETE CASCADE ENABLE
);

CREATE TABLE USER_VOLUME
(
  VOLUME_ID NUMBER NOT NULL,
  USER_ID   NUMBER NOT NULL,
  CONSTRAINT USER_VOLUME_PK PRIMARY KEY (VOLUME_ID, USER_ID) ENABLE,
  CONSTRAINT UC2_VOLUME_FK FOREIGN KEY (VOLUME_ID) REFERENCES VOLUME (ID_VOLUME) ON DELETE CASCADE ENABLE,
  CONSTRAINT UC2_USER_FK FOREIGN KEY (USER_ID) REFERENCES T_USER (ID_USER) ON DELETE CASCADE ENABLE
);

CREATE TABLE USER_MAGAZINE
(
  MAGAZINE_ID NUMBER NOT NULL,
  USER_ID     NUMBER NOT NULL,
  CONSTRAINT USER_MAGAZINE_PK PRIMARY KEY (MAGAZINE_ID, USER_ID) ENABLE,
  CONSTRAINT UM2_MAGAZINE_FK FOREIGN KEY (MAGAZINE_ID) REFERENCES MAGAZINE (ID_MAGAZINE) ON DELETE CASCADE ENABLE,
  CONSTRAINT UM2_USER_FK FOREIGN KEY (USER_ID) REFERENCES T_USER (ID_USER) ON DELETE CASCADE ENABLE
);

DROP SEQUENCE CHAPTER_SEQ;
CREATE SEQUENCE CHAPTER_SEQ;

CREATE OR REPLACE TRIGGER CHAPTER_TRG
BEFORE INSERT ON CHAPTER
FOR EACH ROW
BEGIN
  SELECT CHAPTER_SEQ.NEXTVAL INTO :NEW.ID_CHAPTER FROM DUAL;
END;
/
ALTER TRIGGER CHAPTER_TRG ENABLE;

INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('1', 'John', 'Darth', TO_DATE('21.08.1973', 'DD.MM.RR'), TO_DATE('10.05.1996', 'DD.MM.RR'), 'JD');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('2', 'Ren', 'Tart', TO_DATE('04.12.1985', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'RT');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('3', 'Ned', 'Cole', TO_DATE('30.01.1996', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'NC');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('4', 'Fael', 'Thedo', TO_DATE('19.04.1979', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'FT');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('5', 'Mumbo', 'Jumbo', TO_DATE('28.01.1993', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'MJ');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('6', 'Jilly', 'Beat', TO_DATE('01.04.1988', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'JB');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('7', 'Loony', 'Douth', TO_DATE('26.03.1986', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'LD');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('8', 'Servy', 'Wailer', TO_DATE('16.09.1997', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'SW');

INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('1', 'Dee');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('2', 'Roo');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('3', 'Sii');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('4', 'Foo');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('5', 'Nuu');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('6', 'Laa');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('7', 'Xoo');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('8', 'Quu');

INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('1', 'Naruto', 'yellow', '18', '20', '80');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('2', 'Sasuke', 'black', '19', '15', '65');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('3', 'Itachi', 'dark', '18', '13', '17');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('4', 'Ichigo', 'orange', '19', '10', '53');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('5', 'Goku', 'blue', '18', '2', '28');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('6', 'Shiro', 'white', '19', '14', '45');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('7', 'Zero', 'shadow', '18', '3', '90');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('8', 'Richard', 'brown', '19', '51', '52');

INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('1', 'Naruto', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'week');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('2', 'Bleach', TO_DATE('11.11.1999', 'DD.MM.RR'), 'close', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('3', 'NoGameNoLife', TO_DATE('11.11.1999', 'DD.MM.RR'), 'close', 'month');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('4', 'Free', TO_DATE('11.11.1999', 'DD.MM.RR'), 'close', 'week');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('5', 'DragonBall', TO_DATE('11.11.1999', 'DD.MM.RR'), 'close', 'month');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('6', 'SAO', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'day');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('7', 'Clannad', TO_DATE('11.11.1999', 'DD.MM.RR'), 'close', 'week');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('8', 'LogHorizon', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('9', 'a', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('10', 'b', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('11', 'c', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('12', 'd', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('13', 'e', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('14', 'f', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');

INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('1', 'Max', 'Milian', TO_DATE('20.12.1997', 'DD.MM.RR'), 'MM', 'Y', 'N');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('2', 'Fero', 'Mrkva', TO_DATE('20.12.1997', 'DD.MM.RR'), 'FM', 'Y', 'Y');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('3', 'Michal', 'Lampa', TO_DATE('20.12.1997', 'DD.MM.RR'), 'ML', 'N', 'N');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('4', 'Martin', 'Hviezda', TO_DATE('20.12.1997', 'DD.MM.RR'), 'MH', 'N', 'N');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('5', 'Lucia', 'Biela', TO_DATE('20.12.1997', 'DD.MM.RR'), 'LB', 'Y', 'Y');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('6', 'Hana', 'Zaluze', TO_DATE('20.12.1997', 'DD.MM.RR'), 'HZ', 'N', 'Y');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('7', 'Petra', 'Tenda', TO_DATE('20.12.1997', 'DD.MM.RR'), 'PT', 'N', 'Y');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('8', 'Andrea', 'Fixa', TO_DATE('20.12.1997', 'DD.MM.RR'), 'AF', 'Y', 'N');

INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('1', 'SUPER Avecome volume1');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('2', 'SUPER Avecome volume2');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('3', 'SUPER Avecome volume3');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('4', 'SUPER Avecome volume4');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('5', 'SUPER Avecome volume5');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('6', 'SUPER Avecome volume6');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('7', 'SUPER Avecome volume7');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('8', 'SUPER Avecome volume8');

INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('1', 'New');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('2', 'York');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('3', 'Times');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('4', 'Square');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('5', 'Fit');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('6', 'Stud');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('7', 'Vut');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('8', 'Br');


INSERT INTO PAGE (ID_PAGE, PAGE_NUMBER, CHAPTER_ID) VALUES ('1', '10', '1');
INSERT INTO PAGE (ID_PAGE, PAGE_NUMBER, CHAPTER_ID) VALUES ('2', '20', '1');
INSERT INTO PAGE (ID_PAGE, PAGE_NUMBER, CHAPTER_ID) VALUES ('3', '35', '2');

INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('1', 'SUPER awesome chapter1', 'a1', 'SOME_URL1', '1');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('2', 'SUPER awesome chapter2', 'b1', 'SOME_URL2', '2');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('3', 'SUPER awesome chapter3', 'c1', 'SOME_URL3', '3');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('4', 'SUPER awesome chapter4', 'd1', 'SOME_URL4', '4');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('5', 'SUPER awesome chapter5', 'e1', 'SOME_URL5', '5');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('6', 'SUPER awesome chapter6', 'f1', 'SOME_URL6', '6');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('7', 'SUPER awesome chapter7', 'g1', 'SOME_URL7', '7');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('8', 'SUPER awesome chapter8', 'h1', 'SOME_URL8', '8');


INSERT INTO MAGAZINE_CHAPTER (MAGAZINE_ID, CHAPTER_ID) VALUES ('1', '1');
INSERT INTO MAGAZINE_CHAPTER (MAGAZINE_ID, CHAPTER_ID) VALUES ('2', '5');
INSERT INTO MAGAZINE_CHAPTER (MAGAZINE_ID, CHAPTER_ID) VALUES ('4', '3');
INSERT INTO MAGAZINE_CHAPTER (MAGAZINE_ID, CHAPTER_ID) VALUES ('3', '7');
INSERT INTO MAGAZINE_CHAPTER (MAGAZINE_ID, CHAPTER_ID) VALUES ('3', '8');


INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('1', '1');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('1', '2');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('1', '3');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('2', '4');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('3', '5');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('5', '6');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('7', '7');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('6', '8');

INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('1', '1');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('2', '2');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('3', '1');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('4', '3');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('5', '7');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('6', '5');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('8', '6');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('2', '4');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('5', '3');

INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('1', '1');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('2', '1');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('3', '3');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('4', '8');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('8', '6');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('6', '8');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('1', '10');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('2', '12');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('3', '12');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('4', '12');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('5', '10');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('6', '10');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('7', '11');

INSERT INTO USER_VOLUME (VOLUME_ID, USER_ID) VALUES ('1', '7');
INSERT INTO USER_VOLUME (VOLUME_ID, USER_ID) VALUES ('3', '5');
INSERT INTO USER_VOLUME (VOLUME_ID, USER_ID) VALUES ('4', '4');
INSERT INTO USER_VOLUME (VOLUME_ID, USER_ID) VALUES ('4', '3');
INSERT INTO USER_VOLUME (VOLUME_ID, USER_ID) VALUES ('5', '5');
INSERT INTO USER_VOLUME (VOLUME_ID, USER_ID) VALUES ('2', '1');

INSERT INTO VOLUME_CHAPTER (VOLUME_ID, CHAPTER_ID) VALUES ('1', '2');
INSERT INTO VOLUME_CHAPTER (VOLUME_ID, CHAPTER_ID) VALUES ('2', '1');
INSERT INTO VOLUME_CHAPTER (VOLUME_ID, CHAPTER_ID) VALUES ('3', '4');
INSERT INTO VOLUME_CHAPTER (VOLUME_ID, CHAPTER_ID) VALUES ('3', '2');
INSERT INTO VOLUME_CHAPTER (VOLUME_ID, CHAPTER_ID) VALUES ('5', '3');
INSERT INTO VOLUME_CHAPTER (VOLUME_ID, CHAPTER_ID) VALUES ('6', '3');


INSERT INTO MANGA_GENRE (MANGA_ID, GENRE_ID) VALUES ('1', '1');
INSERT INTO MANGA_GENRE (MANGA_ID, GENRE_ID) VALUES ('1', '2');
INSERT INTO MANGA_GENRE (MANGA_ID, GENRE_ID) VALUES ('2', '2');


INSERT INTO PAGE_CHARACTER (PAGE_ID, CHARACTER_ID) VALUES ('1', '2');
INSERT INTO PAGE_CHARACTER (PAGE_ID, CHARACTER_ID) VALUES ('2', '1');
INSERT INTO PAGE_CHARACTER (PAGE_ID, CHARACTER_ID) VALUES ('1', '3');


INSERT INTO USER_GENRE (USER_ID, GENRE_ID) VALUES ('1', '2');
INSERT INTO USER_GENRE (USER_ID, GENRE_ID) VALUES ('1', '1');
INSERT INTO USER_GENRE (USER_ID, GENRE_ID) VALUES ('3', '2');

INSERT INTO USER_MAGAZINE (MAGAZINE_ID, USER_ID) VALUES ('1', '1');
INSERT INTO USER_MAGAZINE (MAGAZINE_ID, USER_ID) VALUES ('2', '3');
INSERT INTO USER_MAGAZINE (MAGAZINE_ID, USER_ID) VALUES ('3', '1');

INSERT INTO ADDITIONAL_DATA (ID_ADDITIONAL, TEXT, VOLUME_ID) VALUES ('1', 'sjkteu', '1');
INSERT INTO ADDITIONAL_DATA (ID_ADDITIONAL, TEXT, VOLUME_ID) VALUES ('2', 'djklhe', '2');
INSERT INTO ADDITIONAL_DATA (ID_ADDITIONAL, TEXT, VOLUME_ID) VALUES ('3', 'aougmen', '3');

INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('1', '1');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('3', '2');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('2', '3');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('2', '4');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('3', '5');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('4', '6');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('5', '7');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('1', '8');


INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('1', '1');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('2', '2');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('3', '3');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('4', '4');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('5', '5');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('6', '6');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('7', '7');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('8', '8');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('6', '8');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('2', '4');

INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('1', '1');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('2', '2');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('3', '3');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('4', '4');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('5', '5');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('6', '6');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('7', '7');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('8', '8');

-- Poznámka: v práci dělám odně s analízami, tedy vydím zužitkování hlavně tam


-- -- Vyber uživatele mající rádi např naruta, pro např analýzu co za typ uživatelů má rádo mangu
-- SELECT t_user.name
-- FROM t_user
--   JOIN user_manga ON t_user.id_user = user_manga.user_id
--   JOIN manga ON manga.id_manga = user_manga.manga_id
-- WHERE manga.title = 'Naruto';
--
-- -- mějme vyhledávač na stránce, chci si najít všechny kapitoly k manze např.: bleach
-- SELECT chapter.*
-- FROM chapter
--   JOIN manga ON chapter.manga_id = manga.id_manga
-- WHERE manga.title = 'Bleach';
--
-- -- Mějme vyhledácač na stránce, chci si najít všechny volume k manze např.: naruto
-- SELECT volume.*
-- FROM volume
--   JOIN volume_chapter ON volume.id_volume = volume_chapter.volume_id
--   JOIN chapter ON chapter.id_chapter = volume_chapter.chapter_id
--   JOIN manga ON chapter.manga_id = manga.id_manga
-- WHERE manga.title = 'Naruto';
--
-- -- Seřadí mangy dle nejoblíbenějších, hodí se pro tabulky
-- SELECT
--   manga.title,
--   COUNT(t_user.id_user) AS "Favouritenes"
-- FROM manga
--   LEFT JOIN user_manga ON user_manga.manga_id = manga.id_manga
--   LEFT JOIN t_user ON user_manga.user_id = t_user.id_user
-- GROUP BY manga.title
-- ORDER BY COUNT(t_user.id_user) DESC;
--
-- -- seřadí volume podle nejobědnávanějších
-- -- hodí se do tabulek k seřazení, pro adina, nebo opět statistiky prodejnosti
-- SELECT
--   volume.name,
--   COUNT(user_volume.user_id) AS "Orders"
-- FROM volume
--   LEFT JOIN user_volume ON user_volume.volume_id = volume.id_volume
-- GROUP BY volume.name
-- ORDER BY COUNT(user_volume.user_id) DESC;
--
-- -- Vybere všechny mangy, z nichž si někdo obšdnal volume, tedy si obědnal knihu dedikovanou pouze této manze
-- -- Můžeme využít k prodejnosti mangy (Magazíny mohou mít výce mang, proto je z této statistiky vynecháme)
-- SELECT manga.title
-- FROM manga
--   JOIN chapter ON chapter.manga_id = manga.id_manga
-- WHERE chapter.id_chapter IN (
--   SELECT volume_chapter.chapter_id
--   FROM volume_chapter
--     JOIN volume ON volume.id_volume = volume_chapter.volume_id
--     JOIN user_volume ON user_volume.volume_id = volume.id_volume
-- );
--
-- -- Vybere všechny charaktery které má někdo mezi oblíbenými.
-- -- Vhodné pro statistiky, pokud nemá někdo rád charakter, mangaka ví že ho může zabít, berme z ekonomického pohledu že mangaku zajímá, aby ho nezrušili a měli pořád ádi jeho mangu
-- SELECT name
-- FROM character ch
-- WHERE EXISTS(
--     SELECT *
--     FROM user_character usch
--     WHERE ch.id_character = usch.character_id
-- );


BEGIN
  EXECUTE IMMEDIATE 'DROP INDEX manga_ix';
  EXCEPTION
  WHEN OTHERS THEN
  IF SQLCODE != -1418
  THEN
    RAISE;
  END IF;
END;
/

EXPLAIN PLAN SET STATEMENT_ID = 'ex_plan1' FOR
SELECT
  manga.title,
  COUNT(user_manga.user_id) AS "Favouritenes"
FROM manga
  LEFT JOIN user_manga ON user_manga.manga_id = manga.id_manga
GROUP BY manga.title
ORDER BY COUNT(user_manga.user_id) DESC;
SELECT PLAN_TABLE_OUTPUT
FROM TABLE (DBMS_XPLAN.DISPLAY());

CREATE INDEX manga_ix
  ON manga (ID_MANGA, TITLE);

EXPLAIN PLAN SET STATEMENT_ID = 'ex_plan2' FOR
SELECT
  manga.title,
  COUNT(user_manga.user_id) AS "Favouritenes"
FROM manga
  LEFT JOIN user_manga ON user_manga.manga_id = manga.id_manga
GROUP BY manga.title
ORDER BY COUNT(user_manga.user_id) DESC;
SELECT PLAN_TABLE_OUTPUT
FROM TABLE (DBMS_XPLAN.DISPLAY());


CREATE OR REPLACE PROCEDURE user_order_info
IS
  CURSOR uoCur IS SELECT
                    T_USER.NICKNAME,
                    count(user_magazine.MAGAZINE_ID) ord
                  FROM T_USER
                    LEFT JOIN user_magazine ON t_user.id_user = user_magazine.user_id
                  GROUP BY t_user.nickname;
  myVar uoCur%ROWTYPE;
  BEGIN
    OPEN uoCur;
    LOOP
      FETCH uoCur INTO myVar;
      EXIT WHEN uoCur%NOTFOUND;
      DBMS_OUTPUT.PUT_LINE(myVar.nickname || ' ordered ' || myVar.ord || ' magazines');
    END LOOP;
    CLOSE uoCur;
  END;
  /

CALL user_order_info();

CREATE OR REPLACE PROCEDURE auto_user(ID_v NUMBER, NAME_v VARCHAR2, SURNAME_v VARCHAR2, DATE_OF_BIRTH_v DATE, NOTIFICATION_ENABLED_v CHAR, SHIPPING_ENABED_v CHAR, CNT NUMBER) AS
  next_cnt NUMBER;
  nick VARCHAR2(54);
  BEGIN
    nick := NAME_v || '_' ||SURNAME_v || '_' || cnt;
    INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
    VALUES (ID_v, NAME_v, SURNAME_v, DATE_OF_BIRTH_v, nick, NOTIFICATION_ENABLED_v,SHIPPING_ENABED_v);
  EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
        next_cnt := CNT+1;
        auto_user(ID_v , NAME_v ,SURNAME_v, DATE_OF_BIRTH_v, NOTIFICATION_ENABLED_v, SHIPPING_ENABED_v, next_cnt);
  END;
/


create or replace view T_AUTO_USER as select * from T_USER;

CREATE OR REPLACE TRIGGER new_user
INSTEAD OF INSERT ON T_AUTO_USER
REFERENCING new AS new old AS old
  DECLARE
  BEGIN
    IF :new.NICKNAME IS NOT NULL
    THEN
      INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
      VALUES (:new.ID_USER, :new.NAME, :new.SURNAME, :new.DATE_OF_BIRTH, :new.NICKNAME, :new.NOTIFICATION_ENABLED,
              :new.SHIPPING_ENABED);
    ELSE
      auto_user(:new.ID_USER, :new.NAME, :new.SURNAME, :new.DATE_OF_BIRTH, :new.NOTIFICATION_ENABLED, :new.SHIPPING_ENABED, 0);
    END IF;
  END;
  /

INSERT INTO T_AUTO_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('9', 'PEPA', 'NOVAK', TO_DATE('20.12.1997', 'DD.MM.RR'), NULL, 'Y', 'N');

INSERT INTO T_AUTO_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('10', 'PEPA', 'NOVAK', TO_DATE('20.12.1997', 'DD.MM.RR'), NULL, 'Y', 'N');

GRANT ALL ON ADDITIONAL_DATA TO XBURES29;
GRANT ALL ON AUTHOR TO XBURES29;
GRANT ALL ON AUTHOR_GENRE TO XBURES29;
GRANT ALL ON AUTHOR_MANGA TO XBURES29;
GRANT ALL ON DRAFTSMAN_MANGA TO XBURES29;
GRANT ALL ON GENRE TO XBURES29;
GRANT ALL ON CHAPTER TO XBURES29;
GRANT ALL ON CHARACTER TO XBURES29;
GRANT ALL ON MAGAZINE TO XBURES29;
GRANT ALL ON MAGAZINE_CHAPTER TO XBURES29;
GRANT ALL ON MANGA TO XBURES29;
GRANT ALL ON MANGA_GENRE TO XBURES29;
GRANT ALL ON MANGA_CHARACTER TO XBURES29;
GRANT ALL ON PAGE TO XBURES29;
GRANT ALL ON PAGE_CHARACTER TO XBURES29;
GRANT ALL ON USER_GENRE TO XBURES29;
GRANT ALL ON USER_CHARACTER TO XBURES29;
GRANT ALL ON USER_MAGAZINE TO XBURES29;
GRANT ALL ON USER_MANGA TO XBURES29;
GRANT ALL ON USER_VOLUME TO XBURES29;
GRANT ALL ON VOLUME TO XBURES29;
GRANT ALL ON VOLUME_CHAPTER TO XBURES29;

DROP MATERIALIZED VIEW userView;

CREATE MATERIALIZED VIEW LOG ON T_USER WITH PRIMARY KEY INCLUDING NEW VALUES;

CREATE MATERIALIZED VIEW userView
REFRESH FAST ON COMMIT
AS SELECT ID_USER, NICKNAME, NAME, SURNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED FROM T_USER;

GRANT ALL ON userView TO xbures29;

SELECT * FROM userView;
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('11', 'Honza', 'Novák', TO_DATE('11.11.1988', 'DD.MM.RR'), 'HN', 'Y', 'N');
COMMIT;
SELECT * FROM userView;DROP TABLE MANGA CASCADE CONSTRAINTS;

DROP TABLE AUTHOR CASCADE CONSTRAINTS;

DROP TABLE AUTHOR_MANGA CASCADE CONSTRAINTS;

DROP TABLE DRAFTSMAN_MANGA CASCADE CONSTRAINTS;
DROP TABLE GENRE CASCADE CONSTRAINTS;

DROP TABLE AUTHOR_GENRE CASCADE CONSTRAINTS;

DROP TABLE USER_GENRE CASCADE CONSTRAINTS;
DROP TABLE MANGA_GENRE CASCADE CONSTRAINTS;
DROP TABLE T_USER CASCADE CONSTRAINTS;

DROP TABLE USER_MANGA CASCADE CONSTRAINTS;
DROP TABLE CHARACTER CASCADE CONSTRAINTS;
DROP TABLE USER_CHARACTER CASCADE CONSTRAINTS;

DROP TABLE PAGE_CHARACTER CASCADE CONSTRAINTS;

DROP TABLE MANGA_CHARACTER CASCADE CONSTRAINTS;
DROP TABLE PAGE CASCADE CONSTRAINTS;

DROP TABLE CHAPTER CASCADE CONSTRAINTS;

DROP TABLE MAGAZINE CASCADE CONSTRAINTS;
DROP TABLE VOLUME CASCADE CONSTRAINTS;

DROP TABLE ADDITIONAL_DATA CASCADE CONSTRAINTS;

DROP TABLE MAGAZINE_CHAPTER CASCADE CONSTRAINTS;

DROP TABLE VOLUME_CHAPTER CASCADE CONSTRAINTS;
DROP TABLE USER_VOLUME CASCADE CONSTRAINTS;

DROP TABLE USER_MAGAZINE CASCADE CONSTRAINTS;


CREATE TABLE MANGA
(
  ID_MANGA        NUMBER       NOT NULL,
  TITLE           VARCHAR2(20) NOT NULL,
  DATE_OF_RELEASE DATE,
  STATUS          VARCHAR2(10) CHECK (STATUS IN ('open', 'close')),
  FREQUENCY       VARCHAR2(10) CHECK (FREQUENCY IN ('day', 'week', 'month', 'year')),
  CONSTRAINT MANGA_PK PRIMARY KEY (ID_MANGA) ENABLE
);

CREATE TABLE AUTHOR
(
  ID_AUTHOR             NUMBER NOT NULL,
  NAME                  VARCHAR2(20),
  SURNAME               VARCHAR2(20),
  DATE_OF_BIRTH         DATE,
  DATE_OF_FIRSTP_UBLISH DATE,
  ALIAS                 VARCHAR2(20),
  CONSTRAINT AUTHOR_PK PRIMARY KEY (ID_AUTHOR) ENABLE
);

CREATE TABLE AUTHOR_MANGA
(
  AUTHOR_ID NUMBER NOT NULL,
  MANGA_ID  NUMBER NOT NULL,
  CONSTRAINT AUTHOR_MANGA_PK PRIMARY KEY (AUTHOR_ID, MANGA_ID) ENABLE,
  CONSTRAINT AM_AUTHOR_FK FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR (ID_AUTHOR) ON DELETE CASCADE ENABLE,
  CONSTRAINT AM_MANGA_FK FOREIGN KEY (MANGA_ID) REFERENCES MANGA (ID_MANGA) ON DELETE CASCADE ENABLE
);

CREATE TABLE DRAFTSMAN_MANGA
(
  DRAFTSMAN_ID NUMBER NOT NULL,
  MANGA_ID     NUMBER NOT NULL,
  CONSTRAINT DRAFTSMAN_MANGA_PK PRIMARY KEY (DRAFTSMAN_ID, MANGA_ID) ENABLE,
  CONSTRAINT DM_DRAFTSMAN_FK FOREIGN KEY (DRAFTSMAN_ID) REFERENCES AUTHOR (ID_AUTHOR) ON DELETE CASCADE ENABLE,
  CONSTRAINT DM_MANGA_FK FOREIGN KEY (MANGA_ID) REFERENCES MANGA (ID_MANGA) ON DELETE CASCADE ENABLE
);

CREATE TABLE GENRE
(
  ID_GENRE NUMBER       NOT NULL,
  NAME     VARCHAR2(20) NOT NULL,
  CONSTRAINT GENRE_PK PRIMARY KEY (ID_GENRE) ENABLE
);

CREATE TABLE T_USER
(
  ID_USER              NUMBER NOT NULL,
  NAME                 VARCHAR2(25),
  SURNAME              VARCHAR2(25),
  DATE_OF_BIRTH        DATE,
  NICKNAME             VARCHAR2(54) UNIQUE, --jmeno_prijmeni_NN
  NOTIFICATION_ENABLED CHAR(1) DEFAULT 'Y' CHECK (NOTIFICATION_ENABLED IN ('Y', 'N')),
  SHIPPING_ENABED      CHAR(1) DEFAULT 'N' CHECK (SHIPPING_ENABED IN ('Y', 'N')),
  CONSTRAINT T_USER_PK PRIMARY KEY (ID_USER) ENABLE
);

CREATE TABLE AUTHOR_GENRE
(
  AUTHOR_ID NUMBER NOT NULL,
  GENRE_ID  NUMBER NOT NULL,
  CONSTRAINT AUTHOR_GENRE_PK PRIMARY KEY (AUTHOR_ID, GENRE_ID) ENABLE,
  CONSTRAINT AG_AUTHOR_FK FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR (ID_AUTHOR) ON DELETE CASCADE ENABLE,
  CONSTRAINT AG_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRE (ID_GENRE) ON DELETE CASCADE ENABLE
);

CREATE TABLE USER_GENRE
(
  USER_ID  NUMBER NOT NULL,
  GENRE_ID NUMBER NOT NULL,
  CONSTRAINT USER_GENRE_PK PRIMARY KEY (USER_ID, GENRE_ID) ENABLE,
  CONSTRAINT UG_USER_FK FOREIGN KEY (USER_ID) REFERENCES T_USER (ID_USER) ON DELETE CASCADE ENABLE,
  CONSTRAINT UG_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRE (ID_GENRE) ON DELETE CASCADE ENABLE
);

CREATE TABLE MANGA_GENRE
(
  MANGA_ID NUMBER NOT NULL,
  GENRE_ID NUMBER NOT NULL,
  CONSTRAINT MANGA_GENRE_PK PRIMARY KEY (MANGA_ID, GENRE_ID) ENABLE,
  CONSTRAINT MG_MANGA_FK FOREIGN KEY (MANGA_ID) REFERENCES MANGA (ID_MANGA) ON DELETE CASCADE ENABLE,
  CONSTRAINT MG_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRE (ID_GENRE) ON DELETE CASCADE ENABLE
);


CREATE TABLE USER_MANGA
(
  USER_ID  NUMBER NOT NULL,
  MANGA_ID NUMBER NOT NULL,
  CONSTRAINT USER_MANGA_PK PRIMARY KEY (USER_ID, MANGA_ID) ENABLE,
  CONSTRAINT UM_USER_FK FOREIGN KEY (USER_ID) REFERENCES T_USER (ID_USER) ON DELETE CASCADE ENABLE,
  CONSTRAINT UM_MANGA_FK FOREIGN KEY (MANGA_ID) REFERENCES MANGA (ID_MANGA) ON DELETE CASCADE ENABLE
);

CREATE TABLE CHARACTER
(
  ID_CHARACTER     NUMBER NOT NULL,
  NAME             VARCHAR2(25),
  LOOK             VARCHAR2(20),
  AGE              NUMBER,
  FIRST_APPEARANCE NUMBER NOT NULL,
  LAST_APPEARANCE  NUMBER NOT NULL,
  CONSTRAINT TABLE1_PK PRIMARY KEY (ID_CHARACTER) ENABLE
);

CREATE TABLE USER_CHARACTER
(
  USER_ID      NUMBER NOT NULL,
  CHARACTER_ID NUMBER NOT NULL,
  CONSTRAINT USER_CHARACTER_PK PRIMARY KEY (USER_ID, CHARACTER_ID) ENABLE,
  CONSTRAINT UC_USER_FK FOREIGN KEY (USER_ID) REFERENCES T_USER (ID_USER) ON DELETE CASCADE ENABLE,
  CONSTRAINT UC_CHARACTER_FK FOREIGN KEY (CHARACTER_ID) REFERENCES CHARACTER (ID_CHARACTER) ON DELETE CASCADE ENABLE
);


CREATE TABLE PAGE
(
  ID_PAGE     NUMBER NOT NULL,
  PAGE_NUMBER NUMBER NOT NULL,
  CHAPTER_ID  NUMBER NOT NULL,
  CONSTRAINT PAGE_PK PRIMARY KEY (ID_PAGE) ENABLE,
  CONSTRAINT P_CHARACTER_FK FOREIGN KEY (CHAPTER_ID) REFERENCES CHARACTER (ID_CHARACTER) ON DELETE CASCADE ENABLE
);

CREATE TABLE PAGE_CHARACTER
(
  PAGE_ID      NUMBER NOT NULL,
  CHARACTER_ID NUMBER NOT NULL,
  CONSTRAINT PAGE_CHARACTER_PK PRIMARY KEY (PAGE_ID, CHARACTER_ID) ENABLE,
  CONSTRAINT PC_PAGE_FK FOREIGN KEY (PAGE_ID) REFERENCES PAGE (ID_PAGE) ON DELETE CASCADE ENABLE,
  CONSTRAINT PC_CHARACTER_FK FOREIGN KEY (CHARACTER_ID) REFERENCES CHARACTER (ID_CHARACTER) ON DELETE CASCADE ENABLE
);

CREATE TABLE MANGA_CHARACTER
(
  MANGA_ID     NUMBER NOT NULL,
  CHARACTER_ID NUMBER NOT NULL,
  CONSTRAINT MANGA_CHARACTER_PK PRIMARY KEY (MANGA_ID, CHARACTER_ID) ENABLE,
  CONSTRAINT MANGA_FK FOREIGN KEY (MANGA_ID) REFERENCES MANGA (ID_MANGA) ON DELETE CASCADE ENABLE,
  CONSTRAINT CHARACTER_FK FOREIGN KEY (CHARACTER_ID) REFERENCES CHARACTER (ID_CHARACTER) ON DELETE CASCADE ENABLE
);


CREATE TABLE CHAPTER
(
  ID_CHAPTER    NUMBER       NOT NULL,
  TITLE         VARCHAR2(25) NOT NULL,
  SERIAL_NUMBER VARCHAR2(12) NOT NULL,
  COVER         VARCHAR2(50),
  MANGA_ID      NUMBER       NOT NULL,
  CONSTRAINT CHAPTER_PK PRIMARY KEY (ID_CHAPTER) ENABLE,
  CONSTRAINT C_MANGA_FK FOREIGN KEY (MANGA_ID) REFERENCES MANGA (ID_MANGA) ON DELETE CASCADE ENABLE
);

CREATE TABLE MAGAZINE
(
  ID_MAGAZINE NUMBER       NOT NULL,
  TITLE       VARCHAR2(25) NOT NULL,
  CONSTRAINT MAGAZINE_PK PRIMARY KEY (ID_MAGAZINE) ENABLE
);

CREATE TABLE VOLUME
(
  ID_VOLUME NUMBER       NOT NULL,
  NAME      VARCHAR2(25) NOT NULL,
  CONSTRAINT VOLUME_PK PRIMARY KEY (ID_VOLUME) ENABLE
);

CREATE TABLE ADDITIONAL_DATA
(
  ID_ADDITIONAL NUMBER NOT NULL,
  TEXT          VARCHAR2(1500),
  VOLUME_ID     NUMBER NOT NULL,
  CONSTRAINT ADDITIONAL_DATA_PK PRIMARY KEY (ID_ADDITIONAL) ENABLE,
  CONSTRAINT A_VOLUME_FK FOREIGN KEY (VOLUME_ID) REFERENCES VOLUME (ID_VOLUME) ON DELETE CASCADE ENABLE
);

CREATE TABLE MAGAZINE_CHAPTER
(
  MAGAZINE_ID NUMBER NOT NULL,
  CHAPTER_ID  NUMBER NOT NULL,
  CONSTRAINT MAGAZINE_CHAPTER_PK PRIMARY KEY (MAGAZINE_ID, CHAPTER_ID) ENABLE,
  CONSTRAINT MC_MAGAZINE_FK FOREIGN KEY (MAGAZINE_ID) REFERENCES MAGAZINE (ID_MAGAZINE) ON DELETE CASCADE ENABLE,
  CONSTRAINT MC_CHAPTER_FK FOREIGN KEY (CHAPTER_ID) REFERENCES CHAPTER (ID_CHAPTER) ON DELETE CASCADE ENABLE
);

CREATE TABLE VOLUME_CHAPTER
(
  VOLUME_ID  NUMBER NOT NULL,
  CHAPTER_ID NUMBER NOT NULL,
  CONSTRAINT VOLUME_CHAPTER_PK PRIMARY KEY (VOLUME_ID, CHAPTER_ID) ENABLE,
  CONSTRAINT VC_VOLUME_FK FOREIGN KEY (VOLUME_ID) REFERENCES VOLUME (ID_VOLUME) ON DELETE CASCADE ENABLE,
  CONSTRAINT VC_CHAPTER_FK FOREIGN KEY (CHAPTER_ID) REFERENCES CHAPTER (ID_CHAPTER) ON DELETE CASCADE ENABLE
);

CREATE TABLE USER_VOLUME
(
  VOLUME_ID NUMBER NOT NULL,
  USER_ID   NUMBER NOT NULL,
  CONSTRAINT USER_VOLUME_PK PRIMARY KEY (VOLUME_ID, USER_ID) ENABLE,
  CONSTRAINT UC2_VOLUME_FK FOREIGN KEY (VOLUME_ID) REFERENCES VOLUME (ID_VOLUME) ON DELETE CASCADE ENABLE,
  CONSTRAINT UC2_USER_FK FOREIGN KEY (USER_ID) REFERENCES T_USER (ID_USER) ON DELETE CASCADE ENABLE
);

CREATE TABLE USER_MAGAZINE
(
  MAGAZINE_ID NUMBER NOT NULL,
  USER_ID     NUMBER NOT NULL,
  CONSTRAINT USER_MAGAZINE_PK PRIMARY KEY (MAGAZINE_ID, USER_ID) ENABLE,
  CONSTRAINT UM2_MAGAZINE_FK FOREIGN KEY (MAGAZINE_ID) REFERENCES MAGAZINE (ID_MAGAZINE) ON DELETE CASCADE ENABLE,
  CONSTRAINT UM2_USER_FK FOREIGN KEY (USER_ID) REFERENCES T_USER (ID_USER) ON DELETE CASCADE ENABLE
);

DROP SEQUENCE CHAPTER_SEQ;
CREATE SEQUENCE CHAPTER_SEQ;

CREATE OR REPLACE TRIGGER CHAPTER_TRG
BEFORE INSERT ON CHAPTER
FOR EACH ROW
BEGIN
  SELECT CHAPTER_SEQ.NEXTVAL INTO :NEW.ID_CHAPTER FROM DUAL;
END;
/
ALTER TRIGGER CHAPTER_TRG ENABLE;

INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('1', 'John', 'Darth', TO_DATE('21.08.1973', 'DD.MM.RR'), TO_DATE('10.05.1996', 'DD.MM.RR'), 'JD');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('2', 'Ren', 'Tart', TO_DATE('04.12.1985', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'RT');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('3', 'Ned', 'Cole', TO_DATE('30.01.1996', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'NC');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('4', 'Fael', 'Thedo', TO_DATE('19.04.1979', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'FT');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('5', 'Mumbo', 'Jumbo', TO_DATE('28.01.1993', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'MJ');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('6', 'Jilly', 'Beat', TO_DATE('01.04.1988', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'JB');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('7', 'Loony', 'Douth', TO_DATE('26.03.1986', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'LD');
INSERT INTO AUTHOR (ID_AUTHOR, NAME, SURNAME, DATE_OF_BIRTH, DATE_OF_FIRSTP_UBLISH, ALIAS)
VALUES ('8', 'Servy', 'Wailer', TO_DATE('16.09.1997', 'DD.MM.RR'), TO_DATE('14.12.1999', 'DD.MM.RR'), 'SW');

INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('1', 'Dee');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('2', 'Roo');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('3', 'Sii');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('4', 'Foo');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('5', 'Nuu');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('6', 'Laa');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('7', 'Xoo');
INSERT INTO GENRE (ID_GENRE, NAME) VALUES ('8', 'Quu');

INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('1', 'Naruto', 'yellow', '18', '20', '80');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('2', 'Sasuke', 'black', '19', '15', '65');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('3', 'Itachi', 'dark', '18', '13', '17');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('4', 'Ichigo', 'orange', '19', '10', '53');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('5', 'Goku', 'blue', '18', '2', '28');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('6', 'Shiro', 'white', '19', '14', '45');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('7', 'Zero', 'shadow', '18', '3', '90');
INSERT INTO CHARACTER (ID_CHARACTER, NAME, LOOK, AGE, FIRST_APPEARANCE, LAST_APPEARANCE)
VALUES ('8', 'Richard', 'brown', '19', '51', '52');

INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('1', 'Naruto', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'week');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('2', 'Bleach', TO_DATE('11.11.1999', 'DD.MM.RR'), 'close', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('3', 'NoGameNoLife', TO_DATE('11.11.1999', 'DD.MM.RR'), 'close', 'month');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('4', 'Free', TO_DATE('11.11.1999', 'DD.MM.RR'), 'close', 'week');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('5', 'DragonBall', TO_DATE('11.11.1999', 'DD.MM.RR'), 'close', 'month');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('6', 'SAO', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'day');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('7', 'Clannad', TO_DATE('11.11.1999', 'DD.MM.RR'), 'close', 'week');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('8', 'LogHorizon', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('9', 'a', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('10', 'b', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('11', 'c', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('12', 'd', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('13', 'e', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');
INSERT INTO MANGA (ID_MANGA, TITLE, DATE_OF_RELEASE, STATUS, FREQUENCY)
VALUES ('14', 'f', TO_DATE('11.11.1999', 'DD.MM.RR'), 'open', 'year');

INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('1', 'Max', 'Milian', TO_DATE('20.12.1997', 'DD.MM.RR'), 'MM', 'Y', 'N');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('2', 'Fero', 'Mrkva', TO_DATE('20.12.1997', 'DD.MM.RR'), 'FM', 'Y', 'Y');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('3', 'Michal', 'Lampa', TO_DATE('20.12.1997', 'DD.MM.RR'), 'ML', 'N', 'N');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('4', 'Martin', 'Hviezda', TO_DATE('20.12.1997', 'DD.MM.RR'), 'MH', 'N', 'N');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('5', 'Lucia', 'Biela', TO_DATE('20.12.1997', 'DD.MM.RR'), 'LB', 'Y', 'Y');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('6', 'Hana', 'Zaluze', TO_DATE('20.12.1997', 'DD.MM.RR'), 'HZ', 'N', 'Y');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('7', 'Petra', 'Tenda', TO_DATE('20.12.1997', 'DD.MM.RR'), 'PT', 'N', 'Y');
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('8', 'Andrea', 'Fixa', TO_DATE('20.12.1997', 'DD.MM.RR'), 'AF', 'Y', 'N');

INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('1', 'SUPER Avecome volume1');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('2', 'SUPER Avecome volume2');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('3', 'SUPER Avecome volume3');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('4', 'SUPER Avecome volume4');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('5', 'SUPER Avecome volume5');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('6', 'SUPER Avecome volume6');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('7', 'SUPER Avecome volume7');
INSERT INTO VOLUME (ID_VOLUME, NAME) VALUES ('8', 'SUPER Avecome volume8');

INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('1', 'New');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('2', 'York');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('3', 'Times');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('4', 'Square');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('5', 'Fit');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('6', 'Stud');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('7', 'Vut');
INSERT INTO MAGAZINE (ID_MAGAZINE, TITLE) VALUES ('8', 'Br');


INSERT INTO PAGE (ID_PAGE, PAGE_NUMBER, CHAPTER_ID) VALUES ('1', '10', '1');
INSERT INTO PAGE (ID_PAGE, PAGE_NUMBER, CHAPTER_ID) VALUES ('2', '20', '1');
INSERT INTO PAGE (ID_PAGE, PAGE_NUMBER, CHAPTER_ID) VALUES ('3', '35', '2');

INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('1', 'SUPER awesome chapter1', 'a1', 'SOME_URL1', '1');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('2', 'SUPER awesome chapter2', 'b1', 'SOME_URL2', '2');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('3', 'SUPER awesome chapter3', 'c1', 'SOME_URL3', '3');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('4', 'SUPER awesome chapter4', 'd1', 'SOME_URL4', '4');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('5', 'SUPER awesome chapter5', 'e1', 'SOME_URL5', '5');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('6', 'SUPER awesome chapter6', 'f1', 'SOME_URL6', '6');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('7', 'SUPER awesome chapter7', 'g1', 'SOME_URL7', '7');
INSERT INTO CHAPTER (ID_CHAPTER, TITLE, SERIAL_NUMBER, COVER, MANGA_ID)
VALUES ('8', 'SUPER awesome chapter8', 'h1', 'SOME_URL8', '8');


INSERT INTO MAGAZINE_CHAPTER (MAGAZINE_ID, CHAPTER_ID) VALUES ('1', '1');
INSERT INTO MAGAZINE_CHAPTER (MAGAZINE_ID, CHAPTER_ID) VALUES ('2', '5');
INSERT INTO MAGAZINE_CHAPTER (MAGAZINE_ID, CHAPTER_ID) VALUES ('4', '3');
INSERT INTO MAGAZINE_CHAPTER (MAGAZINE_ID, CHAPTER_ID) VALUES ('3', '7');
INSERT INTO MAGAZINE_CHAPTER (MAGAZINE_ID, CHAPTER_ID) VALUES ('3', '8');


INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('1', '1');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('1', '2');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('1', '3');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('2', '4');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('3', '5');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('5', '6');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('7', '7');
INSERT INTO MANGA_CHARACTER (MANGA_ID, CHARACTER_ID) VALUES ('6', '8');

INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('1', '1');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('2', '2');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('3', '1');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('4', '3');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('5', '7');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('6', '5');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('8', '6');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('2', '4');
INSERT INTO USER_CHARACTER (USER_ID, CHARACTER_ID) VALUES ('5', '3');

INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('1', '1');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('2', '1');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('3', '3');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('4', '8');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('8', '6');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('6', '8');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('1', '10');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('2', '12');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('3', '12');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('4', '12');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('5', '10');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('6', '10');
INSERT INTO USER_MANGA (USER_ID, MANGA_ID) VALUES ('7', '11');

INSERT INTO USER_VOLUME (VOLUME_ID, USER_ID) VALUES ('1', '7');
INSERT INTO USER_VOLUME (VOLUME_ID, USER_ID) VALUES ('3', '5');
INSERT INTO USER_VOLUME (VOLUME_ID, USER_ID) VALUES ('4', '4');
INSERT INTO USER_VOLUME (VOLUME_ID, USER_ID) VALUES ('4', '3');
INSERT INTO USER_VOLUME (VOLUME_ID, USER_ID) VALUES ('5', '5');
INSERT INTO USER_VOLUME (VOLUME_ID, USER_ID) VALUES ('2', '1');

INSERT INTO VOLUME_CHAPTER (VOLUME_ID, CHAPTER_ID) VALUES ('1', '2');
INSERT INTO VOLUME_CHAPTER (VOLUME_ID, CHAPTER_ID) VALUES ('2', '1');
INSERT INTO VOLUME_CHAPTER (VOLUME_ID, CHAPTER_ID) VALUES ('3', '4');
INSERT INTO VOLUME_CHAPTER (VOLUME_ID, CHAPTER_ID) VALUES ('3', '2');
INSERT INTO VOLUME_CHAPTER (VOLUME_ID, CHAPTER_ID) VALUES ('5', '3');
INSERT INTO VOLUME_CHAPTER (VOLUME_ID, CHAPTER_ID) VALUES ('6', '3');


INSERT INTO MANGA_GENRE (MANGA_ID, GENRE_ID) VALUES ('1', '1');
INSERT INTO MANGA_GENRE (MANGA_ID, GENRE_ID) VALUES ('1', '2');
INSERT INTO MANGA_GENRE (MANGA_ID, GENRE_ID) VALUES ('2', '2');


INSERT INTO PAGE_CHARACTER (PAGE_ID, CHARACTER_ID) VALUES ('1', '2');
INSERT INTO PAGE_CHARACTER (PAGE_ID, CHARACTER_ID) VALUES ('2', '1');
INSERT INTO PAGE_CHARACTER (PAGE_ID, CHARACTER_ID) VALUES ('1', '3');


INSERT INTO USER_GENRE (USER_ID, GENRE_ID) VALUES ('1', '2');
INSERT INTO USER_GENRE (USER_ID, GENRE_ID) VALUES ('1', '1');
INSERT INTO USER_GENRE (USER_ID, GENRE_ID) VALUES ('3', '2');

INSERT INTO USER_MAGAZINE (MAGAZINE_ID, USER_ID) VALUES ('1', '1');
INSERT INTO USER_MAGAZINE (MAGAZINE_ID, USER_ID) VALUES ('2', '3');
INSERT INTO USER_MAGAZINE (MAGAZINE_ID, USER_ID) VALUES ('3', '1');

INSERT INTO ADDITIONAL_DATA (ID_ADDITIONAL, TEXT, VOLUME_ID) VALUES ('1', 'sjkteu', '1');
INSERT INTO ADDITIONAL_DATA (ID_ADDITIONAL, TEXT, VOLUME_ID) VALUES ('2', 'djklhe', '2');
INSERT INTO ADDITIONAL_DATA (ID_ADDITIONAL, TEXT, VOLUME_ID) VALUES ('3', 'aougmen', '3');

INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('1', '1');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('3', '2');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('2', '3');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('2', '4');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('3', '5');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('4', '6');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('5', '7');
INSERT INTO DRAFTSMAN_MANGA (DRAFTSMAN_ID, MANGA_ID) VALUES ('1', '8');


INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('1', '1');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('2', '2');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('3', '3');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('4', '4');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('5', '5');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('6', '6');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('7', '7');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('8', '8');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('6', '8');
INSERT INTO AUTHOR_GENRE (AUTHOR_ID, GENRE_ID) VALUES ('2', '4');

INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('1', '1');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('2', '2');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('3', '3');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('4', '4');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('5', '5');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('6', '6');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('7', '7');
INSERT INTO AUTHOR_MANGA (AUTHOR_ID, MANGA_ID) VALUES ('8', '8');

-- Poznámka: v práci dělám odně s analízami, tedy vydím zužitkování hlavně tam


-- -- Vyber uživatele mající rádi např naruta, pro např analýzu co za typ uživatelů má rádo mangu
-- SELECT t_user.name
-- FROM t_user
--   JOIN user_manga ON t_user.id_user = user_manga.user_id
--   JOIN manga ON manga.id_manga = user_manga.manga_id
-- WHERE manga.title = 'Naruto';
--
-- -- mějme vyhledávač na stránce, chci si najít všechny kapitoly k manze např.: bleach
-- SELECT chapter.*
-- FROM chapter
--   JOIN manga ON chapter.manga_id = manga.id_manga
-- WHERE manga.title = 'Bleach';
--
-- -- Mějme vyhledácač na stránce, chci si najít všechny volume k manze např.: naruto
-- SELECT volume.*
-- FROM volume
--   JOIN volume_chapter ON volume.id_volume = volume_chapter.volume_id
--   JOIN chapter ON chapter.id_chapter = volume_chapter.chapter_id
--   JOIN manga ON chapter.manga_id = manga.id_manga
-- WHERE manga.title = 'Naruto';
--
-- -- Seřadí mangy dle nejoblíbenějších, hodí se pro tabulky
-- SELECT
--   manga.title,
--   COUNT(t_user.id_user) AS "Favouritenes"
-- FROM manga
--   LEFT JOIN user_manga ON user_manga.manga_id = manga.id_manga
--   LEFT JOIN t_user ON user_manga.user_id = t_user.id_user
-- GROUP BY manga.title
-- ORDER BY COUNT(t_user.id_user) DESC;
--
-- -- seřadí volume podle nejobědnávanějších
-- -- hodí se do tabulek k seřazení, pro adina, nebo opět statistiky prodejnosti
-- SELECT
--   volume.name,
--   COUNT(user_volume.user_id) AS "Orders"
-- FROM volume
--   LEFT JOIN user_volume ON user_volume.volume_id = volume.id_volume
-- GROUP BY volume.name
-- ORDER BY COUNT(user_volume.user_id) DESC;
--
-- -- Vybere všechny mangy, z nichž si někdo obšdnal volume, tedy si obědnal knihu dedikovanou pouze této manze
-- -- Můžeme využít k prodejnosti mangy (Magazíny mohou mít výce mang, proto je z této statistiky vynecháme)
-- SELECT manga.title
-- FROM manga
--   JOIN chapter ON chapter.manga_id = manga.id_manga
-- WHERE chapter.id_chapter IN (
--   SELECT volume_chapter.chapter_id
--   FROM volume_chapter
--     JOIN volume ON volume.id_volume = volume_chapter.volume_id
--     JOIN user_volume ON user_volume.volume_id = volume.id_volume
-- );
--
-- -- Vybere všechny charaktery které má někdo mezi oblíbenými.
-- -- Vhodné pro statistiky, pokud nemá někdo rád charakter, mangaka ví že ho může zabít, berme z ekonomického pohledu že mangaku zajímá, aby ho nezrušili a měli pořád ádi jeho mangu
-- SELECT name
-- FROM character ch
-- WHERE EXISTS(
--     SELECT *
--     FROM user_character usch
--     WHERE ch.id_character = usch.character_id
-- );


BEGIN
  EXECUTE IMMEDIATE 'DROP INDEX manga_ix';
  EXCEPTION
  WHEN OTHERS THEN
  IF SQLCODE != -1418
  THEN
    RAISE;
  END IF;
END;
/

EXPLAIN PLAN SET STATEMENT_ID = 'ex_plan1' FOR
SELECT
  manga.title,
  COUNT(user_manga.user_id) AS "Favouritenes"
FROM manga
  LEFT JOIN user_manga ON user_manga.manga_id = manga.id_manga
GROUP BY manga.title
ORDER BY COUNT(user_manga.user_id) DESC;
SELECT PLAN_TABLE_OUTPUT
FROM TABLE (DBMS_XPLAN.DISPLAY());

CREATE INDEX manga_ix
  ON manga (ID_MANGA, TITLE);

EXPLAIN PLAN SET STATEMENT_ID = 'ex_plan2' FOR
SELECT
  manga.title,
  COUNT(user_manga.user_id) AS "Favouritenes"
FROM manga
  LEFT JOIN user_manga ON user_manga.manga_id = manga.id_manga
GROUP BY manga.title
ORDER BY COUNT(user_manga.user_id) DESC;
SELECT PLAN_TABLE_OUTPUT
FROM TABLE (DBMS_XPLAN.DISPLAY());


CREATE OR REPLACE PROCEDURE user_order_info
IS
  CURSOR uoCur IS SELECT
                    T_USER.NICKNAME,
                    count(user_magazine.MAGAZINE_ID) ord
                  FROM T_USER
                    LEFT JOIN user_magazine ON t_user.id_user = user_magazine.user_id
                  GROUP BY t_user.nickname;
  myVar uoCur%ROWTYPE;
  BEGIN
    OPEN uoCur;
    LOOP
      FETCH uoCur INTO myVar;
      EXIT WHEN uoCur%NOTFOUND;
      DBMS_OUTPUT.PUT_LINE(myVar.nickname || ' ordered ' || myVar.ord || ' magazines');
    END LOOP;
    CLOSE uoCur;
  END;
  /

CALL user_order_info();

CREATE OR REPLACE PROCEDURE auto_user(ID_v NUMBER, NAME_v VARCHAR2, SURNAME_v VARCHAR2, DATE_OF_BIRTH_v DATE, NOTIFICATION_ENABLED_v CHAR, SHIPPING_ENABED_v CHAR, CNT NUMBER) AS
  next_cnt NUMBER;
  nick VARCHAR2(54);
  BEGIN
    nick := NAME_v || '_' ||SURNAME_v || '_' || cnt;
    INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
    VALUES (ID_v, NAME_v, SURNAME_v, DATE_OF_BIRTH_v, nick, NOTIFICATION_ENABLED_v,SHIPPING_ENABED_v);
  EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
        next_cnt := CNT+1;
        auto_user(ID_v , NAME_v ,SURNAME_v, DATE_OF_BIRTH_v, NOTIFICATION_ENABLED_v, SHIPPING_ENABED_v, next_cnt);
  END;
/


create or replace view T_AUTO_USER as select * from T_USER;

CREATE OR REPLACE TRIGGER new_user
INSTEAD OF INSERT ON T_AUTO_USER
REFERENCING new AS new old AS old
  DECLARE
  BEGIN
    IF :new.NICKNAME IS NOT NULL
    THEN
      INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
      VALUES (:new.ID_USER, :new.NAME, :new.SURNAME, :new.DATE_OF_BIRTH, :new.NICKNAME, :new.NOTIFICATION_ENABLED,
              :new.SHIPPING_ENABED);
    ELSE
      auto_user(:new.ID_USER, :new.NAME, :new.SURNAME, :new.DATE_OF_BIRTH, :new.NOTIFICATION_ENABLED, :new.SHIPPING_ENABED, 0);
    END IF;
  END;
  /

INSERT INTO T_AUTO_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('9', 'PEPA', 'NOVAK', TO_DATE('20.12.1997', 'DD.MM.RR'), NULL, 'Y', 'N');

INSERT INTO T_AUTO_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('10', 'PEPA', 'NOVAK', TO_DATE('20.12.1997', 'DD.MM.RR'), NULL, 'Y', 'N');

GRANT ALL ON ADDITIONAL_DATA TO XBURES29;
GRANT ALL ON AUTHOR TO XBURES29;
GRANT ALL ON AUTHOR_GENRE TO XBURES29;
GRANT ALL ON AUTHOR_MANGA TO XBURES29;
GRANT ALL ON DRAFTSMAN_MANGA TO XBURES29;
GRANT ALL ON GENRE TO XBURES29;
GRANT ALL ON CHAPTER TO XBURES29;
GRANT ALL ON CHARACTER TO XBURES29;
GRANT ALL ON MAGAZINE TO XBURES29;
GRANT ALL ON MAGAZINE_CHAPTER TO XBURES29;
GRANT ALL ON MANGA TO XBURES29;
GRANT ALL ON MANGA_GENRE TO XBURES29;
GRANT ALL ON MANGA_CHARACTER TO XBURES29;
GRANT ALL ON PAGE TO XBURES29;
GRANT ALL ON PAGE_CHARACTER TO XBURES29;
GRANT ALL ON USER_GENRE TO XBURES29;
GRANT ALL ON USER_CHARACTER TO XBURES29;
GRANT ALL ON USER_MAGAZINE TO XBURES29;
GRANT ALL ON USER_MANGA TO XBURES29;
GRANT ALL ON USER_VOLUME TO XBURES29;
GRANT ALL ON VOLUME TO XBURES29;
GRANT ALL ON VOLUME_CHAPTER TO XBURES29;

DROP MATERIALIZED VIEW userView;

CREATE MATERIALIZED VIEW LOG ON T_USER WITH PRIMARY KEY INCLUDING NEW VALUES;

CREATE MATERIALIZED VIEW userView
REFRESH FAST ON COMMIT
AS SELECT ID_USER, NICKNAME, NAME, SURNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED FROM T_USER;

GRANT ALL ON userView TO xbures29;

SELECT * FROM userView;
INSERT INTO T_USER (ID_USER, NAME, SURNAME, DATE_OF_BIRTH, NICKNAME, NOTIFICATION_ENABLED, SHIPPING_ENABED)
VALUES ('11', 'Honza', 'Novák', TO_DATE('11.11.1988', 'DD.MM.RR'), 'HN', 'Y', 'N');
COMMIT;
SELECT * FROM userView;